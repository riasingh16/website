name: Push

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    # - name: Creating 3 Node GKE Cluster
    #   run: |
    #     chmod 755 ./build/github/stages/1-gke-setup/cluster-setup
    #     ./build/github/stages/1-gke-setup/cluster-setup
    #   env:
    #     SDK_TOKEN: ${{ secrets.SDK_TOKEN }}
    #     PROJECT_NAME: ${{ secrets.PROJECT_NAME }}

    # - name: Creating KinD cluster 
    #   uses: engineerd/setup-kind@v0.3.0
    #   with:
    #       version: "v0.7.0"

    # - name: Gettting pods in kube-system namespace
    #   run: |
    #     kubectl cluster-info
    #     kubectl get pods -n kube-system
    #     echo "current-context:" $(kubectl config current-context)
    #     echo "environment-kubeconfig:" ${KUBECONFIG}

    # - name: Creating a KinD cluster
    #   run: |
    #     kind create cluster --kubeconfig --wait 5m
    #     kubectl cluster-info --context kind-kind

    # - name: Creating cluster
    #   run: |
    #     GO111MODULE=on 
    #     docker version
    #     curl -Lo ./kind https://github.com/kubernetes-sigs/kind/releases/download/v0.7.0/kind-$(uname)-amd64
    #     chmod +x ./kind
    #     sudo mv ./kind /usr/local/bin/kind
    #     kind version
    #     kind create cluster --loglevel debug

    - name: Create k8s Kind Cluster
      uses: helm/kind-action@v1.0.0-rc.1        
            
    - name: Getting Nodes
      run: |
        kubectl get nodes

    - name: Deploy an application
      run: |
        kubectl run nginx --image=nginx

    # - name: Set config
    #   run: echo ::set-env name=kubeconfig::$(base64 ~/.kube/config)
    #   id: config

    - name: Set config
      run: echo "::add-path::/home/runner/.kube"


    # - name: Getting the value of udit
    #   run : echo "$KUBE_CONFIG_DATA"

    - name: Running container kill chaos experiment
      uses: uditgaurav/kubernetes-chaos@master
      env:
        # KUBE_CONFIG_DATA: ${{ steps.config.outputs.kubeconfig }}
        ##If litmus is not installed
        INSTALL_LITMUS: true
        ##Give application info under chaos
        APP_NS: default
        APP_LABEL: run=nginx
        APP_KIND: deployment
        EXPERIMENT_NAME: container-kill
        ##Custom images can also be used
        EXPERIMENT_IMAGE: litmuschaos/ansible-runner:latest        
        TARGET_CONTAINER: nginx
        TOTAL_CHAOS_DURATION: 20
        CHAOS_INTERVAL: 10


    # - name: Running disk-fill chaos experiment
    #   uses: mayadata-io/github-chaos-actions@v0.1.0
    #   env:
    #     KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
    #     ##Give application info under chaos
    #     APP_NS: default
    #     APP_LABEL: run=nginx
    #     APP_KIND: deployment
    #     EXPERIMENT_NAME: disk-fill
    #     FILL_PERCENTAGE: 80
    #     TARGET_CONTAINER: nginx
    #     ##Custom images can also be used
    #     EXPERIMENT_IMAGE: litmuschaos/ansible-runner:latest                 

    # - name: Running node-cpu-hog chaos experiment
    #   uses: uditgaurav/kubernetes-chaos@master
    #   env:
    #     ##Give application info under chaos
    #     APP_NS: default
    #     APP_LABEL: run=nginx
    #     APP_KIND: deployment
    #     EXPERIMENT_NAME: node-cpu-hog
    #     ##Custom images can also be used
    #     EXPERIMENT_IMAGE: litmuschaos/ansible-runner:latest        
    #     TOTAL_CHAOS_DURATION: 60
    #     NODE_CPU_CORE: 2

    # - name: Running node-memory-hog chaos experiment
    #   uses: mayadata-io/github-chaos-actions@v0.1.0
    #   env:
    #     KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
    #     ##Give application info under chaos
    #     APP_NS: default
    #     APP_LABEL: run=nginx
    #     APP_KIND: deployment
    #     EXPERIMENT_NAME: node-memory-hog
    #     ##Custom images can also be used
    #     EXPERIMENT_IMAGE: litmuschaos/ansible-runner:latest        
    #     TOTAL_CHAOS_DURATION: 120
    #     MEMORY_PERCENTAGE: 90    

    # - name: Running pod-cpu-hog chaos experiment
    #   uses: mayadata-io/github-chaos-actions@v0.1.0
    #   env:
    #     KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
    #     ##Give application info under chaos
    #     APP_NS: default
    #     APP_LABEL: run=nginx
    #     APP_KIND: deployment
    #     EXPERIMENT_NAME: pod-cpu-hog
    #     ##Custom images can also be used
    #     EXPERIMENT_IMAGE: litmuschaos/ansible-runner:latest        
    #     TARGET_CONTAINER: nginx
    #     TOTAL_CHAOS_DURATION: 60
    #     CPU_CORES: 1

    # - name: Running pod delete chaos experiment
    #   uses: mayadata-io/github-chaos-actions@v0.1.0
    #   env:
    #     KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
    #     ##If litmus is not installed
    #     INSTALL_LITMUS: true
    #     ##Give application info under chaos
    #     APP_NS: default
    #     APP_LABEL: run=nginx
    #     APP_KIND: deployment
    #     EXPERIMENT_NAME: pod-delete
    #     ##Custom images can also be used
    #     EXPERIMENT_IMAGE: litmuschaos/ansible-runner:latest        
    #     TOTAL_CHAOS_DURATION: 30
    #     CHAOS_INTERVAL: 10
    #     FORCE: false

    # - name: Running pod-memory-hog chaos experiment
    #   uses: mayadata-io/github-chaos-actions@v0.1.0
    #   env:
    #     KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
    #     ##Give application info under chaos
    #     APP_NS: default
    #     APP_LABEL: run=nginx
    #     APP_KIND: deployment
    #     EXPERIMENT_NAME: pod-cpu-hog
    #     ##Custom images can also be used
    #     EXPERIMENT_IMAGE: litmuschaos/ansible-runner:latest        
    #     TARGET_CONTAINER: nginx
    #     TOTAL_CHAOS_DURATION: 60
    #     MEMORY_CONSUMPTION: 500

    # - name: Running pod network corruption chaos experiment
    #   uses: mayadata-io/github-chaos-actions@v0.1.0
    #   env:
    #     KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
    #     ##Give application info under chaos
    #     APP_NS: default
    #     APP_LABEL: run=nginx
    #     APP_KIND: deployment
    #     EXPERIMENT_NAME: pod-network-corruption
    #     ##Custom images can also be used
    #     EXPERIMENT_IMAGE: litmuschaos/ansible-runner:latest        
    #     TARGET_CONTAINER: nginx
    #     TOTAL_CHAOS_DURATION: 60
    #     NETWORK_INTERFACE: eth0

    # - name: Running pod-network-latency chaos experiment
    #   uses: mayadata-io/github-chaos-actions@v0.1.0
    #   env:
    #     KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
    #     ##Give application info under chaos
    #     APP_NS: default
    #     APP_LABEL: run=nginx
    #     APP_KIND: deployment
    #     EXPERIMENT_NAME: pod-network-latency
    #     ##Custom images can also be used
    #     EXPERIMENT_IMAGE: litmuschaos/ansible-runner:latest        
    #     TARGET_CONTAINER: nginx
    #     TOTAL_CHAOS_DURATION: 60
    #     NETWORK_INTERFACE: eth0
    #     NETWORK_LATENCY: 60000

    # - name: Running pod-network-loss chaos experiment
    #   uses: mayadata-io/github-chaos-actions@v0.1.0
    #   env:
    #     KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
    #     ##Give application info under chaos
    #     APP_NS: default
    #     APP_LABEL: run=nginx
    #     APP_KIND: deployment
    #     EXPERIMENT_NAME: pod-network-loss
    #     ##Custom images can also be used
    #     EXPERIMENT_IMAGE: litmuschaos/ansible-runner:latest        
    #     TARGET_CONTAINER: nginx
    #     TOTAL_CHAOS_DURATION: 60
    #     NETWORK_INTERFACE: eth0
    #     NETWORK_PACKET_LOSS_PERCENTAGE: 100
             
    # # # - name: Deleting GKE Cluster
    # # #   run: |
    # # #     chmod 755 ./build/github/stages/2-gke-cleanup/cluster-cleanup
    # # #     ./build/github/stages/2-gke-cleanup/cluster-cleanup
    # # #   env:
    # # #     SDK_TOKEN: ${{ secrets.SDK_TOKEN }}
    # # #     PROJECT_NAME: ${{ secrets.PROJECT_NAME }}  

